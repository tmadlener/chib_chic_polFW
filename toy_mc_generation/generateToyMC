#!/bin/bash

# Script for generating Toy MC samples

# number of events to generate
NEVENTS=5000000

# efficiency files
MUON_EFFS=$(pwd)/../polarization/single_muon_effs.root
PHOTON_EFFS=$(pwd)/../polarization/photon_effs_param.root

# output base directory
OUTBASEDIR=${WORK}/ChiPol/chic2_chic1_ratios/toy_mc_data_gen/

# all the settings to run (must contain state:helicity1:helicity2)
# the keys will be turned into the output directories and the value
# will be split along the ':' and then used as state, helicity1 and helicity2 input arguments
declare -A SETTINGS
# chic1 settings
SETTINGS["chic1_unpolarized"]="1:2./3.:0"
SETTINGS["chic1_max_negative"]="1:1:0"
SETTINGS["chic1_max_positive"]="1:0:0"

# chic2 settings
SETTINGS["chic2_unpolarized"]="2:2./5.:2./5."
SETTINGS["chic2_max_negative"]="2:0:0"
SETTINGS["chic2_max_positive"]="2:0:1"

for setting in ${!SETTINGS[@]}; do
    args=${SETTINGS["${setting}"]}
    state=$(echo $args | awk -F':' '{print $1}')
    helicity1=$(echo "scale=16; "$(echo $args | awk -F':' '{print $2}') | bc)
    helicity2=$(echo "scale=16; "$(echo $args | awk -F':' '{print $3}') | bc)

    outfile=${OUTBASEDIR}/${setting}/toy_data.root

    # throw it to the batch system
    sbatch ./batchRunToyMCGen.sh ${outfile} ${state} ${helicity1} ${helicity2} ${NEVENTS}
done
